# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы. Подсказка: матрица — система некоторых математических
# величин, расположенных в виде прямоугольной схемы. Примеры матриц вы найдете в методичке. Следующий шаг —
# реализовать перегрузку метода __str__() для вывода матрицы в привычном виде. Далее реализовать перегрузку метода
# __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна
# быть новая матрица. Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
# первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:

    # Defining the init function
    def __init__(self, list_1, list_2):
        self.list_1 = list_1
        self.list_2 = list_2

    # Defining the add function
    def __add__(self):
        matr = [[0, 0, 0],
                [0, 0, 0],
                [0, 0, 0]]

        for i in range(len(self.list_1)):

            for j in range(len(self.list_2[i])):
                matr[i][j] = self.list_1[i][j] + self.list_2[i][j]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr]))

    # Defining the str function
    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr]))


test_matrix = Matrix([[10, 20, 30],
                    [40, 50, 60],
                    [70, 80, 90]],
                   [[1, 2, 3],
                    [4, 5, 6],
                    [7, 8, 9]])


print(test_matrix.__add__())